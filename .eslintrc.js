module.exports = {
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:cypress/recommended',
    'plugin:import/errors',
    'plugin:import/typescript',
    'plugin:jest/recommended',
    'plugin:react/recommended',
    // Prettier extensions must be extended last
    'prettier',
    'prettier/@typescript-eslint',
    'prettier/react',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: { jsx: true },
    ecmaVersion: 2018,
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint', 'cypress', 'import', 'jest', 'promise', 'react', 'react-hooks'],
  rules: {
    '@typescript-eslint/no-shadow': 'error',
    '@typescript-eslint/no-var-requires': 'off',
    'brace-style': 'error',
    curly: 'error',
    'import/no-self-import': 'error',
    'import/order': [
      'error',
      {
        groups: [['external', 'builtin']],
        'newlines-between': 'always',
        alphabetize: { order: 'asc', caseInsensitive: true },
      },
    ],
    'no-duplicate-imports': 'error',
    'no-multi-spaces': 'error',
    'no-shadow': 'off',
    'no-throw-literal': 'error',
    'no-useless-rename': 'error',
    'no-var': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': 'error',
    'prefer-spread': 'error',
    'promise/no-new-statics': 'error',
    'promise/prefer-await-to-then': 'error',
    'promise/param-names': 'error',
    'react/function-component-definition': 'error',
    'react/jsx-boolean-value': 'error',
    'react/jsx-curly-brace-presence': 'error',
    'react/jsx-fragments': 'error',
    'react/no-danger': 'error',
    'react/self-closing-comp': 'error',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
    'sort-imports': [
      'error',
      {
        ignoreDeclarationSort: true,
        ignoreCase: true,
      },
    ],
  },
  settings: {
    react: { version: 'detect' },
  },
};
